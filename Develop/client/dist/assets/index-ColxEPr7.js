(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))o(r);new MutationObserver(r=>{for(const c of r)if(c.type==="childList")for(const s of c.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&o(s)}).observe(document,{childList:!0,subtree:!0});function n(r){const c={};return r.integrity&&(c.integrity=r.integrity),r.referrerPolicy&&(c.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?c.credentials="include":r.crossOrigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function o(r){if(r.ep)return;r.ep=!0;const c=n(r);fetch(r.href,c)}})();const m=document.getElementById("search-form"),h=document.getElementById("search-input"),p=document.querySelector("#today"),d=document.querySelector("#forecast"),a=document.getElementById("history"),y=document.getElementById("search-title"),u=document.getElementById("weather-img"),f=document.getElementById("temp"),E=document.getElementById("wind"),g=document.getElementById("humidity"),w=async t=>{try{const e=await fetch("/api/weather/",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({city:t})});if(!e.ok)throw new Error(`HTTP error! Status: ${e.status}`);const n=await e.json();console.log("weatherData: ",n),v(n.current),H(n.forecast)}catch(e){console.error("Error fetching weather:",e),alert("Failed to fetch weather data. Please check your input and try again.")}},I=async()=>(await fetch("/api/weather/history",{method:"GET",headers:{"Content-Type":"application/json"}})).json(),x=async t=>{await fetch(`/api/weather/history/${t}`,{method:"DELETE",headers:{"Content-Type":"application/json"}}),l()},v=t=>{if(!t)return;const{temperature:e,humidity:n,windSpeed:o,description:r}=t;y.textContent="Current Weather",u.setAttribute("src",""),u.setAttribute("alt",r),u.setAttribute("class","weather-img"),y.append(u),f.textContent=`Temp: ${e}°C`,E.textContent=`Wind: ${o} m/s`,g.textContent=`Humidity: ${n} %`,p&&(p.innerHTML="",p.append(y,f,E,g))},H=t=>{if(!t||!t.length)return;const e=document.createElement("div"),n=document.createElement("h4");e.setAttribute("class","col-12"),n.textContent="5-Day Forecast:",e.append(n),d&&(d.innerHTML="",d.append(e)),t.forEach(o=>S(o))},S=t=>{const{temperature:e,humidity:n,windSpeed:o,description:r}=t,{col:c,cardTitle:s,weatherIcon:i,tempEl:b,windEl:C,humidityEl:L}=B();s.textContent="Forecast",i.setAttribute("src",""),i.setAttribute("alt",r),b.textContent=`Temp: ${e} °C`,C.textContent=`Wind: ${o} m/s`,L.textContent=`Humidity: ${n} %`,d&&d.append(c)},T=async t=>{const e=await t.json();if(a){a.innerHTML="",e.length||(a.innerHTML='<p class="text-center">No Previous Search History</p>');for(let n=e.length-1;n>=0;n--){const o=P(e[n]);a.append(o)}}},B=()=>{const t=document.createElement("div"),e=document.createElement("div"),n=document.createElement("div"),o=document.createElement("h5"),r=document.createElement("img"),c=document.createElement("p"),s=document.createElement("p"),i=document.createElement("p");return t.append(e),e.append(n),n.append(o,r,c,s,i),t.classList.add("col-auto"),e.classList.add("forecast-card","card","text-white","bg-primary","h-100"),n.classList.add("card-body","p-2"),o.classList.add("card-title"),c.classList.add("card-text"),s.classList.add("card-text"),i.classList.add("card-text"),{col:t,cardTitle:o,weatherIcon:r,tempEl:c,windEl:s,humidityEl:i}},A=t=>{const e=document.createElement("button");return e.setAttribute("type","button"),e.setAttribute("aria-controls","today forecast"),e.classList.add("history-btn","btn","btn-secondary","col-10"),e.textContent=t,e},D=()=>{const t=document.createElement("button");return t.setAttribute("type","button"),t.classList.add("fas","fa-trash-alt","delete-city","btn","btn-danger","col-2"),t.addEventListener("click",N),t},O=()=>{const t=document.createElement("div");return t.classList.add("display-flex","gap-2","col-12","m-1"),t},P=t=>{const e=A(t.name),n=D();n.dataset.city=JSON.stringify(t);const o=O();return o.append(e,n),o},F=t=>{if(t.preventDefault(),!h.value)throw new Error("City cannot be blank");const e=h.value.trim();w(e).then(()=>{l()}),h.value=""},$=t=>{if(t.target.matches(".history-btn")){const e=t.target.textContent;w(e).then(l)}},N=t=>{t.stopPropagation();const e=JSON.parse(t.target.getAttribute("data-city")).id;x(e).then(l)},l=()=>I().then(T);m==null||m.addEventListener("submit",F);a==null||a.addEventListener("click",$);l();
